/*! \mainpage MFC documentation
 *
 * \section org Organization

 * \arg <a href="https://mfc-caltech.github.io/pre_process/index.html">Pre_process</a> 
 * \arg <a href="https://mfc-caltech.github.io/simulation/index.html">Simulation</a> 
 * \arg <a href="https://mfc-caltech.github.io/post_process/index.html">Post_process</a> 
 *
 * \section intro_sec Introduction
 *
 * This is the documentation for the MFC.
 * The MFC is a simulation software for multi-component, multi-phase,
 * and bubbly flows. MFC was developed at Caltech by a group
 * of post-doctoral scientists and graduate research students
 * under the supervision of Tim Colonius. These contributors 
 * include:
 * \arg Spencer Bryngelson
 * \arg Kevin Schmidmayer
 * \arg Vedran Coralic
 * \arg Jomela Meng
 * \arg Kazuki Maeda
 *
 * and their contact information is located in the "AUTHORS" file in the source code.
 *
 * \section install_sec Installation
 *
 * The documents that describe how to configure and install the MFC are located in the 
 * source code as "CONFIGURE" and "INSTALL". They are also described here.
 *
 * \subsection step1 Step 1: Configure and ensure dependencies can be located
 *
 *
 * ## Main dependencies: MPI and Python ##
 * If you do not have Python, it can be installed via
 * Homebrew on OSX (https://www.brew.sh) as:
 *   \arg brew install python
 *
 * or compiled via your favorite package manager on Unix systems.
 *
 * An MPI fortran compiler is required for all systems.
 * If you do not have one, Homebrew can take care of this
 * on OSX:
 *    \arg brew install open-mpi
 *
 * or compiled via another package manager on Unix systems.
 *
 * ## Simulation code dependency: FFTW ##
 * If you already have FFTW compiled:
 *     \arg Specify the location of your FFTW library and
 *     include files in Makefile.user (fftw_lib_dir and
 *     fftw_include_dir)
 *
 * If you do not have FFTW compiler, the library and
 * installer are included in this package. Just:
 *     \arg cd installers
 *     \arg ./install_fftw.sh
 *
 * ## Post process code dependency: Silo/HDF5 ##
 *
 * Post-processing of parallel data files is not required,
 * but can indeed be handled with the MFC. For this, HDF5
 * and Silo must be installed
 *
 * On OSX, a custom Homebrew tap for Silo is included in the installers
 * directory. You can use it via
 *     \arg cd installers
 *     \arg brew install silo.rb
 *
 * This will install silo and its dependences (including HDF5)
 * in their usual locations (/usr/local/lib and
 * /usr/local/include)
 *
 * On Unix systems, you can install via a package manager or
 * from source. On CentOS (also Windows 7), HDF5
 * binaries can be found at
 *     https://support.hdfgroup.org/ftp/HDF5/current18/bin/
 * Untar this archive in your intended location via
 *     \arg tar -zxf [your HDF5 archive]
 * 
 * Silo should be downloaded at
 *     https://wci.llnl.gov/simulation/computer-codes/silo/downloads
 * then
 *     \arg tar -zxf [your Silo archive]
 *     \arg cd [your Silo archive]
 *     \arg ./configure --prefix=[target installation directory] --enable-pythonmodule --enable-optimization --disable-hzip --disable-fpzip --enableportable-binary FC=mpif90 F77=mpif77 -with-hdf5=[your hdf5 directory]/include,/[your hdf5 directory]/lib --disable-silex
 *     \arg make
 *     \arg make install
 *
 * Add the following line to your ~/.bash_profile : export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/[your silo directory]/lib:/[your hdf5 directory]/lib
 *
 * Finally:
 *     \arg source ~/.bash_profile
 * 
 * You will then need to modify silo_lib_dir and silo_include_dir in
 * Makefile.user to point to your silo directory.
 *
 * \subsection step2 Step 2: Install/Build
 *
 * Once all dependencies have been installed, the MFC can be built via
 * 	\arg make
 *
 * from the MFC directory. This will build all MFC components. Individual
 * components can be built via
 * \arg make [component]
 *
 * where [component] is one of "pre_process,simulation,post_process".
 *
 * Once this is completed, you can ensure that the software is working
 * as intended by
 * 	\arg make test
 *
 *
 * \section license_sec License
 *
 * MFC is free software: you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License, either version 3 
 * of the License, or any later version. 
 * A copy of the GNU General Public License is included with the MFC, and is
 * also located at http://www.gnu.org/licenses.
 *
 * The MFC is distributed in the hope that it will be useful, 
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * Copyright 2019 California Institute of Technology
 *
 * \section documents_sec Useful documents
 * 
 * \subsection user User's guide
 *
 * A user's guide is included here:
 *
 * \subsection paper MFC paper
 *
 * The paper that describes the MFC's capabilities is located here:
 * 
 * \subsection pub Related publications
 *
 * Several publications have used the MFC. A partial list is included here.
 *
 * Refereed journal publications:
 * \arg Meng and Colonius (2018) JFM
 * \arg Meng and Colonius (2015) Shock waves
 * \arg Bryngelson, Schmidmayer, Colonius (2019) IJMF 
 * \arg Schmidmayer, Bryngelson, Colonius (2019) under review
 * \arg Coralic and Colonius (2014) JCP
 *
 * Ph.D. Disserations:
 * \arg K. Maeda (2018) Ph.D. thesis, California Institute of Technology 
 * \arg J. Meng (2016) Ph.D. thesis, California Institute of Technology
 * \arg V. Coralic (2014) Ph.D. thesis, California Institute of Technology
 *
*/
